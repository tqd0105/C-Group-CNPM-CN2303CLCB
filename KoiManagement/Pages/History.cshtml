@page "/History"
@model KoiManagement.WebApplication.Pages.HistoryModel

@{
    ViewData["Title"] = "Service History";
    Layout = "~/Pages/Shared/_Layout.cshtml";

    
}

<!doctype html>
<html class="no-js" lang="zxx">
<head>
    <meta charset="utf-8">
    <title>History</title>
    <link rel="stylesheet" href="css/bootstrap.min.css">
    <style>
        
    </style>
</head>
<body >
    <div style="margin: 0 100px;">
        <h2 style="text-align:center; color: #08c608;">HISTORY BOOKING</h2>

        <form method="get" style="display: flex; justify-content: space-between; align-content:center;">
            <div>
                <a asp-page="/Booking" class="button button-bookingForm boxed-btn" style="text-decoration: none;">Booking</a>
            </div>
            <p style="margin-left: 10px;">
                <input type="text" name="SearchString" placeholder="Search" style="border-radius: 5px; border: 1px solid gray; padding: 5px; outline: none;"/>
                <input type="date" name="SearchDate" style="border-radius: 5px; border: 1px solid gray; padding: 5px; outline: none;" />
                <input type="submit" value="Filter" class="btn btn-primary"/>
            </p>
            
        </form>
    <table class="table">
        <thead>
            <tr>
                <th >
                    @Html.DisplayNameFor(model => model.BookingSchedule[0].name)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.BookingSchedule[0].phone)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.BookingSchedule[0].email)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.BookingSchedule[0].koi_name)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.BookingSchedule[0].Booking_Date)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.BookingSchedule[0].vets_name)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.BookingSchedule[0].description)
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.BookingSchedule)
            {
                <tr>
                        <td style="white-space: nowrap;">
                        @Html.DisplayFor(modelItem => item.name)
                    </td >
                        <td style="white-space: nowrap;">
                        @Html.DisplayFor(modelItem => item.phone)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.email)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.koi_name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Booking_Date)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.vets_name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.description)
                    </td>
                        <td style="white-space: nowrap;">
                        <a asp-page="./Edits" asp-route-id="@item.Id" class="btn btn-primary">Edit</a> 
                        <a asp-page="./Infors" asp-route-id="@item.Id" class="btn btn-info">Details</a> 
                        <a asp-page="./Deletes" asp-route-id="@item.Id" class="btn btn-danger">Delete</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>

    </div>
    <script>
        let currentServiceId = null;
        const feedbackData = {}; // Object to store feedback for each service

        function openFeedbackModal(serviceId) {
            currentServiceId = serviceId;
            const feedback = feedbackData[serviceId] || ""; // Retrieve saved feedback if available
            document.getElementById('modal-feedback-text').value = feedback; // Set textarea value
            document.getElementById('feedbackModal').style.display = 'block';
        }

        function closeFeedbackModal() {
            document.getElementById('feedbackModal').style.display = 'none';
        }

        function submitFeedback() {
            const feedback = document.getElementById('modal-feedback-text').value;
            const rating = document.getElementById('rating-value-' + currentServiceId).innerText;
            console.log(`Feedback for ${currentServiceId}: ${feedback}, Rating: ${rating}`);
            feedbackData[currentServiceId] = feedback; // Save feedback to the object
            closeFeedbackModal();
        }

        function setRating(id, rating) {
            document.getElementById('rating-value-' + id).innerText = rating;
            const stars = document.querySelectorAll(`#rating-container-${id} .star`);
            stars.forEach((star, index) => {
                star.classList.toggle('selected', index < rating);
            });
        }

        function confirmRating(id) {
            const stars = document.querySelectorAll(`#rating-container-${id} .star`);
            stars.forEach(star => {
                star.onclick = null; // Disable clicking on stars after confirmation
            });
            document.getElementById('confirm-btn-' + id).style.display = 'none'; // Hide the confirm button
        }
    </script>
</body>
</html>
